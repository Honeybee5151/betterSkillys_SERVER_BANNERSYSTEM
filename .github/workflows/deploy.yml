name: Deploy to VPS
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Build project
        run: |
          dotnet restore
          dotnet build --configuration Release
          
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_IPV4 }}
          username: root
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -e  # Exit on any error
            
            # Navigate to project directory
            cd /home/honeybee5151/O7/realm-server-master
            
            # Configure git safely
            git config --global --add safe.directory /home/honeybee5151/O7/realm-server-master
            
            # FIX: Update remote URL to point to the correct repository
            echo "üîß Updating repository URL..."
            git remote set-url origin https://github.com/Honeybee5151/betterSkillys_SERVER_BANNERSYSTEM.git
            
            echo "üîÑ Updating code..."
            git reset --hard HEAD
            git clean -fd
            git pull origin master
            
            # === Stop both services ===
            echo "üõë Stopping rotmg service..."
            systemctl stop rotmg
            
            echo "üõë Stopping rotmg2 service..."
            systemctl stop rotmg2
            
            echo "üî® Building server..."
            dotnet restore
            dotnet build --configuration Release
            
            # Verify build succeeded - Check for both DLL files
            if [ ! -f "App/bin/Release/net8.0/App.dll" ]; then
              echo "‚ùå Build failed - App.dll not found!"
              exit 1
            fi
            
            if [ ! -f "WorldServer/bin/Release/net8.0/WorldServer.dll" ]; then
              echo "‚ùå Build failed - WorldServer.dll not found!"
              exit 1
            fi
            
            echo "‚úÖ Build succeeded - Both DLLs found!"
            
            # === Start both services ===
            echo "üöÄ Starting rotmg service..."
            systemctl start rotmg
            
            echo "üöÄ Starting rotmg2 service..."
            systemctl start rotmg2
            
            # Wait for services to start and check status
            sleep 3
            # Check status for rotmg
            if systemctl is-active --quiet rotmg; then
              echo "‚úÖ rotmg service started successfully!"
              systemctl status rotmg --no-pager -l
            else
              echo "‚ùå rotmg service failed to start!"
              systemctl status rotmg --no-pager -l
              journalctl -u rotmg --no-pager -n 20
              exit 1
            fi
            # Check status for rotmg2
            if systemctl is-active --quiet rotmg2; then
              echo "‚úÖ rotmg2 service started successfully!"
              systemctl status rotmg2 --no-pager -l
            else
              echo "‚ùå rotmg2 service failed to start!"
              systemctl status rotmg2 --no-pager -l
              journalctl -u rotmg2 --no-pager -n 20
              exit 1
            fi
            echo "‚úÖ Deployment completed!"
